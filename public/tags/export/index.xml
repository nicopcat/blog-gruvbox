<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>export on Nekolas</title>
    <link>http://blog.nekolas.cafe/tags/export/</link>
    <description>Recent content in export on Nekolas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jul 2022 17:00:00 +0800</lastBuildDate><atom:link href="http://blog.nekolas.cafe/tags/export/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript ES6 Module 模块导入/导出</title>
      <link>http://blog.nekolas.cafe/posts/tech/javascript/js-es-module/</link>
      <pubDate>Mon, 04 Jul 2022 17:00:00 +0800</pubDate>
      
      <guid>http://blog.nekolas.cafe/posts/tech/javascript/js-es-module/</guid>
      <description>貌似在18年，原生JavaScript终于实现了自带模块的导出导入功能。
它有什么用呢？
比如我上一个demo，需要一个将两个对象深层合并的方法。
我可以选择直接写在组件里，但更直观的方法是把方法封装在 ./src/components/megreObj.js 中，更易于查看。
组件内如何调用另一个文件里的方法呢？
Module Export/Import come to rescue!
应用模块到你的 HTML 首先，你需要把 type=&amp;quot;module&amp;quot;放到 &amp;lt;script&amp;gt;标签中，来声明这个脚本是一个模块，不然HTML是不会渲染的，还会报错：
&amp;lt;script type=&amp;#34;module&amp;#34; src=&amp;#34;main.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Export export有两种方式:
 export default  每个模块只能有一个默认导出 引入时不需要 { } 包裹   export  可以有多个 引入时需要 { } 包裹    例子：
// 默认导出 export default class user { constructor(name, age) { this.name = name; this.age = age } } // 普通导出 export function printName(user) { console.log(`username is ${user.</description>
    </item>
    
  </channel>
</rss>
