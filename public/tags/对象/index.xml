<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>对象 on Nic Tian</title>
    <link>http://blog.nekolas.cafe/tags/%E5%AF%B9%E8%B1%A1/</link>
    <description>Recent content in 对象 on Nic Tian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jun 2022 15:00:00 +0800</lastBuildDate><atom:link href="http://blog.nekolas.cafe/tags/%E5%AF%B9%E8%B1%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何浅合并一下 JavaScript 对象（其实希望深拷贝）</title>
      <link>http://blog.nekolas.cafe/posts/tech/javascript/js-object-merge/</link>
      <pubDate>Thu, 23 Jun 2022 15:00:00 +0800</pubDate>
      
      <guid>http://blog.nekolas.cafe/posts/tech/javascript/js-object-merge/</guid>
      <description>由于业务需求，本人需要将两个对象进行合并。 对象层级较浅的情况，可以使用 ES6 ...语法，解构赋值，或 Object.assign() 快速合并；但对象里有子对象嵌套时，前两招就不好使了。要么使用第三方库，如 loadash 的 _.merge() 或 jQuery 的 $.extend() 方法，要么自己封装一个函数。
... 拷贝对象属性 使用扩展运算符 {...obj} 克隆或者拷贝对象的属性：
const obj1 = { name: &amp;#34;Nic&amp;#34; } const clonedObj = { ...obj1 } console.log(clonedObj) // { name: &amp;#34;Nic&amp;#34; } ... 合并对象 使用扩展运算符 {...obj} 合并两个对象，可以看到，扩展运算符内部的同名属性会被覆盖掉：
const obj1 = { a: 1 } const obj2 = { a: 2, b: 3 } const obj3 = { a: 3, b: 4, c: 5 } const obj = { .</description>
    </item>
    
  </channel>
</rss>
