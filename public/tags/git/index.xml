<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Nic Tian</title>
    <link>http://blog.nekolas.cafe/tags/git/</link>
    <description>Recent content in Git on Nic Tian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Mar 2022 12:29:00 +0800</lastBuildDate><atom:link href="http://blog.nekolas.cafe/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git 使用笔记</title>
      <link>http://blog.nekolas.cafe/posts/tech/others/git-guide/</link>
      <pubDate>Mon, 21 Mar 2022 12:29:00 +0800</pubDate>
      
      <guid>http://blog.nekolas.cafe/posts/tech/others/git-guide/</guid>
      <description>最近发现了一个非常有意思的网站，Github 标星 24.1k。趣味的交互式体验以及丰富的视觉化效果，让学 Git 变得非常轻松。
跟 Git 打过交道的朋友，大概都受过不少的苦，Git 流程不仅概念比较抽象，命令也繁多，让人头大。报错时，我通常就 Google 一下，问题貌似暂时解决了，但这背后的原理还是一知半解的，下次说不定还会发生。这个网站又给了我掌握 Git 的决心！
学习地址：LearnGitBranching
Github 地址：LearnGitBranching
下面是一些笔记~
基础篇 循序渐进地介绍 Git 主要命令
1. Git Commit 与 Git Branch Git 的分支也非常轻量。它们只是简单地指向某个提交纪录 —— 仅此而已。所以许多 Git 爱好者传颂：
 早建分支！多用分支！
  提交分支  git commit &amp;lt;branch&amp;gt;切换到新的分支  git checkout &amp;lt;branch&amp;gt;如果你想创建一个新的分支同时切换到这个新创建的分支  git checkout -b &amp;lt;your-branch-name&amp;gt; Git 2.23 版本中，引入了一个名为 git switch 的新命令，最终会取代 git checkout，因为 checkout 作为单个命令有点超载（它承载了很多独立的功能）。
 2. Git Merge 假设有需要一个 bugFix 分支：</description>
    </item>
    
  </channel>
</rss>
