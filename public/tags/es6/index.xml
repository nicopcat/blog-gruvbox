<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ES6 on Nic Tian</title>
    <link>http://blog.nekolas.cafe/tags/es6/</link>
    <description>Recent content in ES6 on Nic Tian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Apr 2022 15:00:00 +0800</lastBuildDate><atom:link href="http://blog.nekolas.cafe/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何优雅地用 JS 创建包含 0 ~ n 的整数数组</title>
      <link>http://blog.nekolas.cafe/posts/tech/javascript/js-create-number-array/</link>
      <pubDate>Sat, 23 Apr 2022 15:00:00 +0800</pubDate>
      
      <guid>http://blog.nekolas.cafe/posts/tech/javascript/js-create-number-array/</guid>
      <description>Codewar 上有一题非常简单的题：
 写一个函数，给任意一个正整数 n，求和。
 Example:
1 2  2 -&amp;gt; 1 + 2 // output: 3 5 -&amp;gt; 1 + 2 + 3 + 4 + 5 // output: 15   【小学生解法】
先用小学就学过等差数列的累加计算公式“( 首项 + 末项 ) * 项数 / 2”计算一下:
1 2  2 -&amp;gt; (1+2)* 2/2 = 3 ✔ 5 -&amp;gt; (1+5)* 5/2 = 15 ✔   本小学生做对了！
【用 for 循环】
也很容易想到的是用 for 循环解题：</description>
    </item>
    
    <item>
      <title>变量的解构赋值</title>
      <link>http://blog.nekolas.cafe/posts/tech/javascript/variable-destructuring/</link>
      <pubDate>Sun, 28 Nov 2021 15:23:00 +0900</pubDate>
      
      <guid>http://blog.nekolas.cafe/posts/tech/javascript/variable-destructuring/</guid>
      <description>变量的解构 再ES6以前，为变量赋值只能直接指定值，而ES6允许以变量解构的方式赋值 （参考阮大神的文章）
数组解构 数组解构允许我们按照一一对应的关系从数组中提取然后将值赋值给变量
1 2 3 4 5 6 7  let arr = [1,2,3]; let [a,b,c] =arr; console.log(a); console.log(b); console.log(b); //输入结果为 1, 2, 3   情况1：完全匹配的解构 let [a, b, c] = [1, 2, 3];
情况2：部分匹配的解构 1 2 3 4 5 6 7 8  let [x, y] = [1, 2, 3]; x // 1 y // 2  let [a, [b], d] = [1, [2, 3], 4]; a // 1 b // 2 d // 4   例子 codewar上有一道题：求一组正整数中的两个最小值的和。</description>
    </item>
    
    <item>
      <title>let &amp; const 对比 var 的新特性</title>
      <link>http://blog.nekolas.cafe/posts/tech/javascript/let-n-const/</link>
      <pubDate>Fri, 26 Nov 2021 22:13:01 +0800</pubDate>
      
      <guid>http://blog.nekolas.cafe/posts/tech/javascript/let-n-const/</guid>
      <description>let   let 关键字用于声明变量 用 let 声明的变量具有块级作用域，var 则没有，这可以阻止循环变量变成全局变量  1 2 3 4 5 6 7 8  var a = []; for (var i = 0; i &amp;lt; 10; i++) { a[i] = function () { console.log(i); }; } a[6](); // 10 //i因为由var声明，所以是全局变量，经过循环后，i= 10，所以结果都为10   1 2 3 4 5 6 7 8  var a = []; for (let i = 0; i &amp;lt; 10; i++) { a[i] = function () { console.</description>
    </item>
    
  </channel>
</rss>
